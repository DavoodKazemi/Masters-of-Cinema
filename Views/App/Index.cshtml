@model HomePageViewModel
@*
        To-do list for custom list section:
    ****1- fix links
        2- make different classes and make a copy the original styles, for customisation
        3- add minor changes in styles and markup, like adding "more lists",
           title "popular lists", etc. Look at this if needed https://letterboxd.com/lists/ .
        4- improve mobile if needed, inspiring from the mobile version of LetterBoxd
        5- clean this razor view and remove unnecessary things
        6- Start a new list button!

        To-do list for popular review section:
    ****1- fix the user not populating!
        2- perhaps add an exclusive view model for more info. ex. movie info and image
        3- make different classes and make a copy the original styles, for customisation
        4- add minor changes in styles and markup, like adding "more review!?",
           title "popular reviews", etc.
        5- improve mobile if needed, inspiring from the mobile version of LetterBoxd
        6- clean this razor view and remove unnecessary things
        7- Add your own review link maybe?
        8- add tooltip for reviewer rate
        9- Choose some interesting/long reviews with proper rate and give them more likes 
            to be displayed. First one from Lara.


        ALso add a section for your activity, like a review, a list, etc
        Add a section for best movies, maybe according to the highest rate
*@
@{
    ViewBag.Title = "Home Page";
}

<section>
    Welcome,
</section>

<section class="homepage-popular-lists mb-5">
    <div class="container px-lg-3 mt-4 px-3">
        <div class="row">
            <div class="border-bottom">Popular lists</div>
        </div>
    </div>
    @*Popular lists here!*@
    <div class="custom-lists-page mt-2">
        <div class="director-movies-container container list-ajax-container">
            <div class="row px-1 tbody" style="border: 1px solid yellowgreen;">
                @foreach (var item in Model.PopularLists.Lists)
                {
                    <article class="director-list-item mt-3 mb-2 mt-lg-4 mb-lg-3 col-12 col-md-6 col-lg-4">
                        <div class="mx-auto">
                            @*Movie poster and its tooltip (title (year)) *@
                            <div class="movie-poster-wrapper list-poster mx-auto">
                                <a asp-controller="Account" asp-action="Clist" asp-route-id="@item.Id" class="mx-auto">
                                    <div class="avatars-wrapper">
                                        <ul>
                                            @foreach (var avatar in item.Avatars)
                                            {
                                                if (avatar != "defaultImage")
                                                {
                                                    <li>
                                                        <img src="@("~/image/" + avatar)" class="" asp-append-version="true" />
                                                    </li>
                                                }
                                                else
                                                {
                                                    <li class="list-avarar-placeholder">
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </a>
                            </div>

                            <a asp-controller="Account" asp-action="Clist" asp-route-id="@item.Id" class="clist-title-wrapper">
                                <div class="lists-list-title">@Html.DisplayFor(modelItem => item.Title)</div>
                            </a>
                            <div class="clist-description">@Html.DisplayFor(modelItem => item.Description)</div>
                            <div class="nav-item ms-md-auto profile-picture-small-wrapper">
                                @if (item.User == Model.User)
                                {
                                    <a class="nav-link profile-picture-small"
                                       asp-controller="Settings" asp-action="Index">

                                        @if (item.User.ProfilePicture != null)
                                        {
                                            <img class="nav-profile-picture" src="data:image/*;base64,@(Convert.ToBase64String(item.User.ProfilePicture))">
                                            <span class="navbar-user-name">@item.User.FirstName</span>
                                        }
                                        else
                                        {
                                            <i class="fas fa-user-circle me-0 nav-default-profile-picture"></i>
                                            <span class="navbar-user-name-default">@item.User.FirstName</span>
                                        }
                                    </a>
                                }
                                else
                                {
                                    @if (item.User.ProfilePicture != null)
                                    {
                                        <div class="profile-picture-small">
                                            <img class="nav-profile-picture" src="data:image/*;base64,@(Convert.ToBase64String(item.User.ProfilePicture))">
                                            <span class="navbar-user-name">@item.User.FirstName</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="profile-picture-small">
                                            <i class="fas fa-user-circle me-0 nav-default-profile-picture"></i>
                                            <span class="navbar-user-name-default">@item.User.FirstName</span>
                                        </div>
                                    }
                                }

                            </div>


                        </div>
                    </article>
                }

            </div>
        </div>
    </div>
</section>

<script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js"></script>

<script>
    $(document).ready(function () {
        var showChar = 700;
        var ellipsestext = "...";
        var moretext = "more";
        var lesstext = "less";
        $('.read-more-object-text').each(function () {
            var content = $(this).html();

            if (content.length > showChar) {

                var c = content.substr(0, showChar);
                var h = content.substr(showChar - 1, content.length - showChar);

                var html = c + '<span class="moreellipses">' + ellipsestext + '&nbsp;</span><span class="morecontent read-more-review"><span>' + h + '</span>&nbsp;&nbsp;<a href="" class="morelink read-more-link">' + moretext + '</a></span>';

                $(this).html(html);
            }

        });


@*New mixed cod*@

        var $container = $('#container-masonary');

        var reMasonry = function () {
            $container.masonry();
        };

        $('.morelink').click(function () {
            

            var $this = $(this).closest(".box-masonary"),
                size = $this.hasClass('large') ?
                    {@* width: 290,*@ height: "fit-content" } :
                    { @*width: 590,*@ height: "fit-content" };
            $this.toggleClass('large').animate(size, reMasonry);

            @*old code when click*@
            if ($(this).hasClass("less")) {
                $(this).removeClass("less");
                $(this).html(moretext);
            } else {
                $(this).addClass("less");
                $(this).html(lesstext);
            }
            $(this).parent().prev().toggle();
            $(this).prev().toggle();
            return false;
        });

    });


    $(function () {

        var $container = $('#container-masonary');

        // trigger masonry
        $container.masonry({
            animate: true
        });

        
    });


    //Start Like/Unlike a review
    /*<#review-like-button> the like button
     *  <#like-icon> the heart icon
     *  <#like-caption> liked/like text
      </> End the like button
    */
    /*<#likers-head-wrapper> the likers section
     *  <#like-count> the count
     *  <#review-stats> x people .. text
      </> End the likers section
    */

    $(document).on("click", "#review-like-button", function (e) {
        //Start changing UI
        //*****toggle between two class for changing the icon color
        $(this).children("#like-icon").toggleClass('review-icon-like review-icon-liked');

        //****change the class of caption
        $(this).children("#like-caption").toggleClass('review-like-text review-liked-text');

        //*****if review is liked (or unliked), change the text
        if ($(this).children('#like-caption').hasClass('review-liked-text')) {
            //if (...) ==> User liked review
            //******change the caption to "Liked"
            $(this).children("#like-caption").html("Liked");

            //******Increase the count by 1
            $(this).siblings().children("#like-count").html(parseInt($(this).siblings().children("#like-count").html()) + 1);
            //******display the stats anyway, because if you pressed like, the like count is certainly more than zero
            //$(this).siblings("#likers-head-wrapper").fadeIn(400);

        } else {
            //else ==> User unliked review
            //******change the caption to "Like Review"
            $(this).children("#like-caption").html("Like Review");

            //hide the stats if the like count is gonna be zero (after dcreasing)
            if (parseInt($(this).siblings().children("#like-count").html()) < 2) {
                $(this).siblings("#likers-head-wrapper").fadeOut(400);
            }

            //******Decrease the count by 1
            $(this).siblings().children("#like-count").html(parseInt($(this).siblings().children("#like-count").html()) - 1);


        }
        //END Start changing UI

        //Start Ajax function for saving like or removing like from database
        var id = $(this).children("#review-id").val();
        var data = "ReviewId=" + id;

        //alert(data);
        $.ajax({

            type: 'POST',
            url: '/Review/LikeReview',
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8', // when we use .serialize() this generates the data in query string format. this needs the default contentType (default content type is: contentType: 'application/x-www-form-urlencoded; charset=UTF-8') so it is optional, you can remove it
            data: data,
            success: function (result) {
                //alert('Successfully received Data ');
                console.log(result);
            },
            error: function () {
                //alert('Failed to receive the Data');
                console.log('Failed ');
            }
        })
        //End Ajax function

    });
//End Like/Unlike a review
</script>


<section class="container homepage-popular-reviews-wrapper">
    <div class="row">
        <div class="border-bottom">POPULAR REVIEWS</div>
    </div>
    
    <div class="row" id="container-masonary">
        @{
            var i2 = 0;
        }
        @foreach (var item in Model.PopularReviews)
        {

            <div class="box-masonary col-6" style="">
                @*<h3 style="background-color: blue">@i2.ToString()</h3>*@
                @{ i2 = i2 + 1;}
                <div class="a-review">
                    @*Movie poster*@
                    <div class="popular-review-header row" style="padding-left: calc(var(--bs-gutter-x) * .5);">
                        <div class="reviewed-movie-poster-wrapper ps-0">
                            <div class="movie-poster col-md-3" style="align-self: flex-start; flex-shrink: 0; width: 120px;">
                                <a asp-controller="Movie" asp-action="Details" asp-route-id="@item.ReviewdMovie.Id">
                                    <img class="img-fluid" src="@("~/image/"+item.ReviewdMovie.ImageName)" asp-append-version="true" />
                                </a>
                            </div>
                        </div>
                        <div class="header-right-col col-md-9">
                            <div class="reviewer-info">
                                @*Reviewer's avatar is displayed on the left side of each review*@
                                @if (item.User.ProfilePicture != null)
                                {
                                    <div class="profile-picture-small-wrapper">
                                        <div class="profile-picture-small">
                                            <img class="nav-profile-picture" src="data:image/*;base64,@(Convert.ToBase64String(item.User.ProfilePicture))">
                                            <span class="navbar-user-name">@item.User.FirstName</span>
                                        </div>
                                    </div>
                                }
                            </div>

                            @*Start Movie info*@
                            <div class="review-movie-info">
                                <a asp-controller="Movie" asp-action="Details" asp-route-id="@item.ReviewdMovie.Id">
                                    <span class="movie-title">
                                        @item.ReviewdMovie.Title
                                    </span>
                                    <span class="movie-year">
                                        @item.ReviewdMovie.Year
                                    </span>
                                </a>
                            </div>
                            @*End Movie info*@
                            @if (@item.ReviewerRate != null)
                            {
                                <div class="reviewer-rate-wrapper d-inline-block">

                                    @item.ReviewerRate
                                    @for (var i = 0; i < item.ReviewerRate; i++)
                                    {
                                        <span class="starGlowReview" id=""></span>

                                    }
                                </div>
                            }
                        </div>

                    </div>



                    @*Start Review's right side*@
                    <div class="d-inline-block review-main-col">
                        @*Start Review's header*@


                        @*Start review text*@
                        <div class="review-text-wrapper">
                            <div class="review-text">
                                <div class="read-more-object-text" style="white-space: pre-line;">@item.ReviewText</div>
                            </div>
                        </div>
                        @*End review text*@

                        @*Start like section*@
                        <div class="review-like-wrapper" style="overflow: hidden;">
                            @*When clicking on this, review will be liked or unliked*@
                            <span class="review-like-button" id="review-like-button">
                                <input type="hidden" value="@item.Id" class="form-control input-small" id="review-id" />
                                @if (item.IsLiked)
                                {
                                    <span class="review-icon-liked" id="like-icon"></span>
                                    <span class="review-liked-text" id="like-caption">Liked</span>
                                }
                                else
                                {
                                    <span class="review-icon-like" id="like-icon"></span>
                                    <span class="review-like-text" id="like-caption">Like Review</span>
                                }
                            </span>
                            @*End When clicking on this, review will be liked or unliked*@

                            @*Start Review like stats*@
                            <partial name="~/Views/Shared/HomePage/_LikersPopularReview.cshtml" model="item" />
                            @*await Html.PartialAsync("~/Views/Shared/Review/_ReviewLikers.cshtml", item)*@
                            @*End Review stats*@

                        </div>
                        @*End like section*@
                    </div>
                    @*END Review's right side*@

                </div>
            </div>

        }
    </div>
</section>

<section class="d-none">

</section>



<script>
    //Start Read more button to hide extra part of lenghty reviews


//End Read more button


//End Read more button
</script>



<section>
    Meet the masters of Cinema!
</section>




<div class="container row text-center mx-auto px-0">


    <h2>
        In honour of Yasujirō Ozu (1903 – 1963).
    </h2>

    <h2>
        これ を わが愛する映画監督・小津安二郎（1903〜1963）に捧げる。
    </h2>


</div>