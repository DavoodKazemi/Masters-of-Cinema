@model MovieRateDirector

@{
    ViewData["Title"] = Model.Movie.Title + " (" + Model.Movie.Year + ")";

    int olDRate = ViewBag.oldRate;
    int newCount = @Model.RateCountAll;
}

<section class="container">
    <div class="row">
        <div class="col-4">
            <div class="bg-white d-inline">
                <span id="average-rate" class="movie-tooltip bg-danger">@Math.Round(@Model.AverageRate, 2)</span>
                
                @*Movie Rating count*@
                <span id="rate-count">@Model.RateCountAll</span><span> Rating!</span>

            </div>
        </div>
        @*Edit rating without reload*@
    <form id="studenteForm" enctype="multipart/form-data" class="col-8">
        <div class="form-group my-3">
            <label asp-for="@Model.MovieRating.MovieId" class="mb-1 control-label"></label>
            <input asp-for="@Model.MovieRating.MovieId" value="@Model.MovieRating.MovieId" class="form-control input-small" />
        </div>

        <div class="form-group my-3">
            <label asp-for="@Model.MovieRating.Rating" class="mb-1 control-label"></label>
            <input asp-for="@Model.MovieRating.Rating" id="Rating" class="form-control input-small" />
        </div>
        


        <span class="rate-icon-wrapper" onmouseout="CRateSelected()" type="button">
            <span class="delete-rate-icon-wrapper" id="delete-rate-icon-wrapper">
                <i class="fas fa-times delete-rate-icon" id="Rate0" onclick="CRate(0), submitStudent(0)"></i>
            </span>
            <span class="starFade" id="Rate1" onclick="CRate(1), submitStudent(1)" onmouseover="CRateOver(1)"></span>
            <span class="starFade" id="Rate2" onclick="CRate(2), submitStudent(1)" onmouseover="CRateOver(2)"></span>
            <span class="starFade" id="Rate3" onclick="CRate(3), submitStudent(1)" onmouseover="CRateOver(3)"></span>

        </span>



    </form>
    </div>
</section>






<script>
    //when page get loaded
    document.addEventListener("DOMContentLoaded", function () {
        //Display current rate
        if (@Model.MovieRating.Id != 0) {
            CRate(@Model.MovieRating.Rating);
        }
        //If movie is not rated, hide the remove rate icon
        if (@Model.MovieRating.Id == 0) {
            $("#Rate0").hide();
        }
    });

    //Click on the nth star (including remove icon)
    function CRate(r) {
        // #Rating input = n
        $("#Rating").val(r);

        // nth star and previous are to glow
        for (var i = 1; i <= r; i++) {
            $("#Rate" + i).attr('class', 'starGlow');
        }
        // stars after the nth are to fade
        for (var i = r + 1; i <= 5; i++) {
            $("#Rate" + i).attr('class', 'starFadeN');
        }

        
        //If they clicked on remove icon
        if (r == 0) {
            $("#Rate0").hide(); //hide remove icon

        //If they rated movie, show remove icon
        } else {
            $("#Rate0").show();
        }


    }

    //When mouse over nth star >>
    function CRateOver(r) {
        //the nth and previous stars are to glow
        for (var i = 1; i <= r; i++) {
            $("#Rate" + i).attr('class', 'starGlow');
        }
        //stars after the nth are to fade
        for (var i = 5; i > r; i--) {
            $("#Rate" + i).attr('class', 'starFadeN');
        }
    }

    //When mouse out of all stars >> the stars restore to show the user rate
    function CRateSelected() {
        var setRating = $("#Rating").val();
        for (var i = 1; i <= setRating; i++) {
            $("#Rate" + i).attr('class', 'starGlow');
        }
        for (var i = 5; i > setRating; i--) {
            $("#Rate" + i).attr('class', 'starFadeN');
        }
    }
</script>

@*Movie information*@
<section class="container mb-5">
    <div class="row">

        <div class="col-4">
            <img class="img-fluid" src="@("~/image/"+Model.Movie.ImageName)" asp-append-version="true" />
        </div>

        <div class="col-8 py-3">
            <div class="mb-3">
                <span class="me-3 fs-3">@Html.DisplayFor(modelItem => Model.Movie.Title)</span>
                <span class="me-3 fs-5">@Html.DisplayFor(modelItem => Model.Movie.Year)</span>
                <span>Directed by </span>
                <span class="me-3 fs-4"><a asp-controller="Director" asp-action="Details" asp-route-id="@Model.Movie.DirectorId">@Model.Director.Name</a></span>
                <span><a class="me-3" asp-action="Edit" asp-route-id="@Model.Movie.Id">(Edit movie)</a></span>
            </div>

            <div class="">
                @Html.DisplayFor(modelItem => Model.Movie.Description)
                <a class="DetailsEditButton" asp-action="Edit" asp-route-id="@Model.Movie.Id">
                    (Edit)
                </a>
            </div>

        </div>
        <hr id="AllMoviesListHr">

        <br />
    </div>
</section>
@*END Movie information*@

@*Using ajax to rate movies without reloading the view*@
<script type="text/javascript">
    function submitStudent(r) {

        //Update rate count
        var newCount2 = @newCount

        //Rate count decreases by 1
        //If they had not rated movie before, rate count increased by 1
        if (r == 1 && newCount2 == 0) {
            document.getElementById("rate-count").textContent = ++newCount2;
        } else if (r == 0 && newCount2 > 0) {
            document.getElementById("rate-count").textContent = --newCount2;
        } else {
            document.getElementById("rate-count").textContent = newCount2;

        }


        //Update the average instantly
        var newRate = parseInt($("#Rating").val(), 10); //The rating they just chose

        //If previous average = 0 (noone had rated movie before this one)
        if (@Model.AverageRate == 0) {
            //The average will be its only rate (this new rate)
            document.getElementById("average-rate").textContent = newRate;
        } else {
            var diff = (newRate - @ViewBag.OldRate) / @newCount;
            var newAverage = @Model.AverageRate + diff;
            document.getElementById("average-rate").textContent = +newAverage.toFixed(2);
        }

        var data = $("#studenteForm").serialize();
        console.log(data);

        //alert(data);
        $.ajax({

            type: 'POST',
            url: '/Movie/Details',
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8', // when we use .serialize() this generates the data in query string format. this needs the default contentType (default content type is: contentType: 'application/x-www-form-urlencoded; charset=UTF-8') so it is optional, you can remove it
            data: data,
            success: function (result) {
                //alert('Successfully received Data ');
                console.log(result);
            },
            error: function () {
                //alert('Failed to receive the Data');
                console.log('Failed ');
            }
        })
    }

</script>