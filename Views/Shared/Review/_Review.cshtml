@model MovieRateDirector
@*Display all existing reviews when page loads*@
@{ 
    string text = "40";
}

@foreach (var item in Model.Review)
{
    @*text = HtmlUtilities.ConvertToPlainText(item.ReviewText);*@
<div class="col-12 a-review">
    @if (item.User.ProfilePicture != null)
    {
    <div class="profile-picture-medium-wrapper">
        <div class="profile-picture-medium">
            <img class="nav-profile-picture" src="data:image/*;base64,@(Convert.ToBase64String(item.User.ProfilePicture))">
        </div>
    </div>
    }
    <div class="d-inline-block review-main-col">
        <div class="review-head-wrapper">
            <div class="review-head">
                <div class="review-head-text">
                    Review by
                    <span class="review-name">@item.User.FirstName</span>
                    @*@await Component.InvokeAsync("UserAvatar", new { userId = item.User.Id })*@
                </div>
            </div>
        </div>

        <div class="review-text-wrapper">
            <div class="review-text">
                <div style="white-space: pre-line;">@item.ReviewText</div>
                @*@HtmlUtilities.ConvertToPlainText(item.ReviewText)*@
            </div>
        </div>
    </div>
    

</div>
}
