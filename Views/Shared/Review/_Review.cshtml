@model MovieRateDirector
@*Display all existing reviews when page loads*@
@{
    string text = "40";
}

@foreach (var item in Model.Review)
{
    @*text = HtmlUtilities.ConvertToPlainText(item.ReviewText);*@
    <div class="col-12 a-review">
        @if (item.User.ProfilePicture != null)
        {
            <div class="profile-picture-medium-wrapper">
                <div class="profile-picture-medium">
                    <img class="nav-profile-picture" src="data:image/*;base64,@(Convert.ToBase64String(item.User.ProfilePicture))">
                </div>
            </div>
        }
        <div class="d-inline-block review-main-col">
            <div class="review-head-wrapper">
                <div class="review-head">
                    <div class="review-head-text">
                        Review by
                        <span class="review-name">@item.User.FirstName</span>
                        @*@await Component.InvokeAsync("UserAvatar", new { userId = item.User.Id })*@
                    </div>
                </div>
            </div>

            <div class="review-text-wrapper">
                <div class="review-text">
                    <div style="white-space: pre-line;">@item.ReviewText</div>
                    @*@HtmlUtilities.ConvertToPlainText(item.ReviewText)*@
                </div>
            </div>
            <div class="review-like-wrapper">

                @if (item.IsLiked)
                {
                    <span class="review-like-button" onclick="logSubmit()" id="review-like-button">
                        <span class="review-icon-liked" id="like-icon"></span>
                        <span class="review-liked-text" id="like-caption">Liked</span>
                    </span>
                }
                else
                {
                    <span class="review-like-button" onclick="log(), logSubmit()" id="review-like-button">
                        <span class="review-icon-like" id="like-icon"></span>
                        <span class="review-like-text" id="like-caption">Like Review</span>
                    </span>
                }



                <span class="review-like-stats d-inline-block">@item.LikeCount people liked this reeview</span>

            </div>
        </div>


    </div>
}


@*3*@
<script>
    //Log functions
    $(document).on("click", "#review-like-button", function (e) {
        //toggle between two class for changing the icon color
        $(this).children("#like-icon").toggleClass('review-icon-like review-icon-liked');

        //change the class of caption
        $(this).children("#like-caption").toggleClass('review-like-text review-liked-text');

        //if review is liked (or unliked), change the text
        if ($(this).children('#like-caption').hasClass('review-liked-text')) {
            $(this).children("#like-caption").html("Liked");
        } else {
            $(this).children("#like-caption").html("Like Review");
        }
    });





</script>
