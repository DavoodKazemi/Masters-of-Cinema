@model AddListViewModel

@{
    ViewData["Title"] = "Start as new List";
    //Layout = "~/Views/Shared/_ProfileLayout.cshtml";
    //int pageCount = ViewBag.pageCount;
}



<div class="container px-lg-3 mt-4 px-3">
    <div class="row">
        <div class="border-bottom fs-4">New List</div>
    </div>
</div>

<hr />
<div class="container">
    <div class="row col-md-4">

        <form asp-action="AddList" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group my-3">
                <label asp-for="Title" class="mb-1 control-label"></label>
                <input asp-for="Title" class="form-control input-small" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group my-3">
                <label asp-for="Description" class="mb-1 control-label"></label>
                <input asp-for="Description" class="form-control input-small" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            @*Movies*@
            <div class="form-group my-3">
                <label asp-for="MovieId" class="mb-1 control-label"></label>
                <input asp-for="MovieId" class="form-control input-small" />

                <span asp-validation-for="MovieId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>

        <form asp-action="Search" enctype="multipart/form-data">
            <input asp-for="SearchTerm" class="form-control input-small" />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>


@*<div class="form-group my-3">
        <input asp-for="@Model.MovieRating.MovieId" type="hidden" value="@Model.MovieRating.MovieId" class="form-control input-small" id="movie-id" />
    </div>*@

@*Begin Add movies section*@

@*Search input*@

<section class="clist-add-movies-wrapper">
    <form class="position-relative container">
        <div class="row">
            <input value="Gh" class="form-control add-list-search-input" id="movie-id" />

            @*BEGIN Search results as suggestions*@
            <div class="ac_results add-clist-suggestion position-absolute list-ajax-container" style="/* display: none; */width: 283px;">
                <ul style="max-height: 180px; overflow: auto;" class="tbody">
                    <li class="ac_even">Spider-Man: Into the Spider-Verse (2018) <span class="directors">Rodney Rothman, Peter Ramsey, et al.</span></li>
                </ul>
                <div class="autocomplete-not-found">
                    Film not here? <a href="/about/film-data/" target="_blank">Find out how to add it.</a>
                    @*END Search results as suggestions*@
                </div>
            </div>
        </div>
    </form>



    @*Added movies*@
    <div class="director-info-page container to-add-movies-wrapper">
        <div class="director-movies-container container list-ajax-container2">
            <div class="row px-1 tbody2">

            </div>
        </div>
    </div>
</section>

@*start ajax function for infinite scroll*@
<script type="text/javascript">

</script>


<script>

    function revealPosts() {
        var posts = $('.ajax-individual-item-wrapper:not(.reveal)');
        var i = 0;
        setInterval(function () {
            if (i >= posts.length) return false;

            var el = posts[i];
            $(el).addClass('reveal');

            i++;
        }, 120);
    }

    $(document).ready(function () {
        $("#movie-id").keyup(function () {
        var data = "movieId=" + $("#movie-id").val();
            console.log(data);

        $.ajax({
            type: 'GET',
            url: '/Account/Search',
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8', // when we use .serialize() this generates the data in query string format. this needs the default contentType (default content type is: contentType: 'application/x-www-form-urlencoded; charset=UTF-8') so it is optional, you can remove it
            data: data,
            success: function (data, result) {
                setTimeout(function () {
                    if (data != '') {
                        $(".list-ajax-container > .tbody").empty().append(data);
                    }
                    revealPosts();
                }, 800);
                //alert('Successfully received Data ');
                console.log(result);
            },
            error: function () {
                //alert('Failed to receive the Data');
                console.log('Failed ');
            }
        })
    });
    });

</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}